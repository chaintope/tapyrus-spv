image: rustlang/rust:nightly

pipelines:
  default:
    - step:
        caches:
          - cargo
          - rust-target
        script:
          - echo "Setup git with read/write access" ; ./scripts/setup-git.sh
          - echo "Build project"                    ; cargo build --release
          - echo "Format source code"               ; ./scripts/fmt.sh
          - echo "Run unit tests"                   ; cargo test --lib --release -v --no-fail-fast -- --nocapture --test
          - echo "Run documentation tests"          ; cargo test --doc --release -v --no-fail-fast -- --nocapture --test
          - echo "Run integration tests"            ; cargo test --test ${CARGO_LIB_NAME} --release -v --no-fail-fast -- --nocapture --test
          - echo "Run benchmark tests"              ; cargo test --lib --release -v --no-fail-fast -- --nocapture --bench
  branches:
    master:
      - step:
          caches:
            - cargo
            - rust-target
          script:
            - echo "Setup git with read/write access" ; ./scripts/setup-git.sh
            - echo "Build project"                    ; cargo build --release
            - echo "Format source code"               ; ./scripts/fmt.sh
            - echo "Run unit tests"                   ; cargo test --lib --release -v --no-fail-fast -- --nocapture --test
            - echo "Run documentation tests"          ; cargo test --doc --release -v --no-fail-fast -- --nocapture --test
            - echo "Run integration tests"            ; cargo test --test ${CARGO_LIB_NAME} --release -v --no-fail-fast -- --nocapture --test
            - echo "Run benchmark tests"              ; cargo test --lib --release -v --no-fail-fast -- --nocapture --bench
            # - echo "Publish documentation"            ; ./scripts/docs.sh

definitions:
  caches:
    cargo: /usr/local/cargo # CARGO_HOME
    rust-target: $BITBUCKET_CLONE_DIR/target